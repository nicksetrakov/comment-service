services:
  comments:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8001:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
      - ./logs:/app/logs
    command: > 
      sh -c "
      python manage.py wait_for_db
      && python manage.py migrate
      && python manage.py check_db_empty
      && daphne -b 0.0.0.0 -p 8000 comment_system.asgi:application"
    depends_on:
      - db
      - redis

  db:
    image: postgres:16.0-alpine3.17
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - db
    volumes:
      - pgadmin_data:$PGADMINDATA

  redis:
    image: redis:6.2.6-alpine
    ports:
      - "6379:6379"

  redis-admin:
    image: rediscommander/redis-commander:latest
    container_name: redis_admin_scrapy
    ports:
      - "8081:8081"
    restart: always
    env_file:
      - .env
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:$RABBITMQDATA
    env_file:
      - .env

  celery:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - ./:/app
    command: celery -A comment_system worker -l info
    depends_on:
      - rabbitmq
      - db

  celery-beat:
    build:
      context: .
    env_file:
      - .env
    volumes:
      - ./:/app
    command: celery -A comment_system beat -l info
    depends_on:
      - rabbitmq
      - db

volumes:
  my_db:
  my_media:
  pgadmin_data:
  logs:
  rabbitmq_data:
